// –£–±–∏—Ä–∞–µ–º dotenv
// require('dotenv').config();

const express = require("express");
const fetch = require("node-fetch");
const bodyParser = require("body-parser");
const cors = require('cors');
const app = express();
const PORT = 3002; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç

// === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
// –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è Telegram –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
const TELEGRAM_TOKEN = '7064290258:AAE0isSFrNtVvVT39hrTjnUwfMNRko6idqM'; // –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
const TELEGRAM_CHAT_ID = '-1002583264850'; // ID —á–∞—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

app.use(cors());
app.use(bodyParser.json());
app.use(express.static(__dirname));

// –ü—Ä–æ—Å—Ç–æ–π –∫—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö IP-–∞–¥—Ä–µ—Å–æ–≤ –∏ –∏—Ö –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è
const ipCache = new Map();
const CACHE_TIMEOUT = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ –∫—ç—à–∞
setInterval(() => {
  const now = Date.now();
  for (const [ip, data] of ipCache.entries()) {
    if (now - data.timestamp > CACHE_TIMEOUT) {
      ipCache.delete(ip);
    }
  }
}, 60 * 60 * 1000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å

function getUserId(ip) {
  const cached = ipCache.get(ip);
  if (cached) {
    cached.timestamp = Date.now();
    return {
      userId: cached.userId,
      isFirstVisit: false
    };
  }
  
  const userId = (ipCache.size + 1).toString();
  ipCache.set(ip, { 
    userId, 
    timestamp: Date.now(),
    firstVisitTime: Date.now()
  });
  
  return {
    userId,
    isFirstVisit: true
  };
}

async function sendToTelegram(message) {
  const payload = {
    chat_id: TELEGRAM_CHAT_ID,
    text: message,
    parse_mode: "HTML"
  };

  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    });

    if (!response.ok) {
      console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: ${response.status}`);
      return false;
    }

    const data = await response.json();
    return data.ok;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error.message);
    return false;
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function formatIP(ip) {
  return ip.replace('::ffff:', '');
}

function getMoscowTime() {
  return new Date().toLocaleString('ru-RU', {
    timeZone: 'Europe/Moscow',
    year: 'numeric',
    month: 'numeric',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit'
  });
}

// === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ó–ê–ü–†–û–°–û–í ===

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–µ—â–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
app.post('/visit', (req, res) => {
  const ip = formatIP(req.ip);
  const { userId, isFirstVisit } = getUserId(ip);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏
  if (isFirstVisit) {
    const msg = `üÜï –ü–µ—Ä–≤—ã–π –∑–∞—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${userId}\nüåê IP: ${ip}\n‚è∞ –í—Ä–µ–º—è: ${getMoscowTime()}`;
    sendToTelegram(msg);
  }
  
  res.json({ userId, isFirstVisit });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (—Ç–æ–ª—å–∫–æ –∫–ª–∏–∫–∏)
app.post('/activity', (req, res) => {
  const { type, details, userId } = req.body;
  if (!userId) return res.status(400).json({ error: 'No userId' });
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–ª–∏–∫–∏
  if (type !== 'click') {
    return res.json({ ok: true });
  }

  const ip = formatIP(req.ip);
  const msg = `üñ±Ô∏è –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${userId}\nüåê IP: ${ip}\nüìå –ö–Ω–æ–ø–∫–∞: ${details}\n‚è∞ –í—Ä–µ–º—è: ${getMoscowTime()}`;
  sendToTelegram(msg);
  res.json({ ok: true });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.post('/error', (req, res) => {
  const { error, userId } = req.body;
  if (!userId) return res.status(400).json({ error: 'No userId' });

  const ip = formatIP(req.ip);
  const msg = `‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞ index.html\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${userId}\nüåê IP: ${ip}\n‚ùå –û—à–∏–±–∫–∞: ${error}\n‚è∞ –í—Ä–µ–º—è: ${getMoscowTime()}`;
  sendToTelegram(msg);
  res.json({ ok: true });
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
}); 